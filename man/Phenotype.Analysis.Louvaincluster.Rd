% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Phenotype-Analysis.R
\name{Phenotype.Analysis.Louvaincluster}
\alias{Phenotype.Analysis.Louvaincluster}
\title{Perform Louvain Clustering on Spectral Data}
\usage{
Phenotype.Analysis.Louvaincluster(
  object,
  resolutions,
  npc = 10,
  threshold = 0.001,
  k = 30,
  n_tree = 50
)
}
\arguments{
\item{object}{A Ramanome object containing the spectral data.}

\item{resolutions}{A vector of resolutions at which to perform the Louvain clustering.}

\item{npc}{The number of principal components to retain in the PCA. Defaults to 10.}

\item{threshold}{The minimum number of samples required to consider a cluster valid.
Defaults to 0.001.}

\item{k}{The number of nearest neighbors to consider. Defaults to 30.}

\item{n_tree}{The number of trees to use in the Approximate Nearest Neighbor search.
Defaults to 50.}
}
\value{
A data frame containing the cluster assignments for each resolution.
}
\description{
This function performs Louvain clustering on the spectral data stored in a Ramanome
object. It first reduces the dimensionality of the data using PCA, then calculates
the k-nearest neighbors for each point, and finally applies the Louvain algorithm
to detect communities at different resolutions.
}
\examples{
data(RamEx_data)
data_smoothed <- Preprocesssing.Smooth.Sg(RamEx_data)
data_baseline <- Preprocesssing.Baseline.Polyfit(data_smoothed)
data_baseline_bubble <- Preprocesssing.Baseline.Bubble(data_smoothed)
data_normalized <- Preprocesssing.Normalize(data_baseline, "ch")
data_cleaned <- Qualitycontrol.ICOD(data_normalized@datasets$normalized.data,var_tol = 0.4)
data_cleaned <- data_normalized[data_cleaned$index_good,]
data_cleaned <- Feature.Reduction.Intensity(data_cleaned, list(c(2000,2250),c(2750,3050), 1450, 1665))
#options(mc.cores = 2)
#clusters_Louvaincluster <- Phenotype.Analysis.Louvaincluster(object = data_cleaned, resolutions = c(0.8))
}
